---
name: 'Build Images to Docker Hub'

on:
  pull_request:
    types: [opened, reopened]
  push:
    branches:
      - main

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      #- run: npm install #npm ci # or yarn install
      #- run: npm install eslint --global
      #- run: npm install eslint-plugin-only-warn --global
      #- run: npm install eslint-plugin-only-warn@latest --save-dev
      #- run: eslint --no-eslintrc --rule 'quote-props:warn' --parser-options=ecmaVersion:13 --parser-options=sourceType:module --quiet --fix --ext .js index.js
      #- run: rm -rf node_modules

      - run: rm pnpm-lock.yaml
        # if: github.event_name == 'pull_request'

      - name: Prepare
        id: prep
        run: |
          #${GITHUB_REPOSITORY#*/}
          DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/lottsanook-resultimage
          VERSION=latest
          SHORTREF=${GITHUB_SHA::8}
          # If this is git tag, use the tag name as a docker tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${SHORTREF}"
          #TAGS="${DOCKER_IMAGE}:${VERSION}"
          # If the VERSION looks like a version number, assume that
          # this is the most recent version of the image and also
          # tag it 'latest'.
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi
          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        uses: docker/login-action@master
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      #- name: Setup Chrome
      #  uses: browser-actions/setup-chrome@v0.0.0
      #  with:
      #    chrome-version: beta

      - name: Build
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@master
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          
      - name: Test Build
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@master
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ${{ steps.prep.outputs.tags }}
